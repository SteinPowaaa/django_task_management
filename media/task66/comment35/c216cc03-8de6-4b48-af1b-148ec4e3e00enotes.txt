Някои неща които позабелязах по сайта. Не искам всичките да ги оправяш. Просто са неща които ми хрумнаха докато гледам кода. :)

1. API response - Принципно добра практика е съобщението което връщаш да ти казва достатъчно ясно какво се случва. 400 респонс вече ти казва че си объркал нещо.

2. Рядко се използва general except клаузата, по принцип хващаш грешките които очакваш че могат да се появят и после спрямо грешката връщаш грешката към клиента.

3. Пише се по PEP8 -> има много плъгини за това :).

4. Относно тестовете прави се клиент fixture (на това from rest_framework.test import APIClient) и после се ползва със force_authenticate, вместо да вкарваш пароли по тестовете. (явно го имаш в todo app тестовете, може би е добре да не логва винаги с един и същи юзър все пак authorized/unauthorized)

5. current_user еднпоинта бих го сложил към къстом ендпоинт на users, за register/login/logout може би няма нужда, но пак са ми малко хвърчащи.

6. Когато създаваме миграция хубаво е да си я наименоваме с това какво се е случило в нея.

7. PersonAdmin интересно име :D, ако те притеснява че вече импортваш това име UserAdmin, често се ползва преименуване на това което импортваш с from django.contrib.auth.admin import UserAdmin as OriginalUserAdmin или друго име.

8. Submit не е най-подходящият бутон за логин.

9. Текста ти размества бутончетата по ишуто, което води до страннотии.

10. В лес-а често се използват промениливи за да може лесно ако бъде решено да се промени цялостната цветова схема на сайта.

11. default стойноста на on_delete на ForeignKey-овете е CASCADЕ, това може и да ти изиграе номер, ако изтриеш спринт например, не е добре да се трият тасковете а по скоро да остават без спринт.

12. Добра практитка е когато пишеш тестове за клас да бъдат Test<името на класа>

13. Класове с малка буква, това ще се направя, че не съм го видял.

14. В any можеш да оставиш генератор.

15. tasks_router = routers.NestedSimpleRouter(router, r'projects', lookup='project') това не е ли по добре да е projects_router, а долното да е tasks_router?

16. TaskViewSet
    - get_queryset може би е добре да взима резулат от супер-а който да филтрираш допълнително при теб (това може и да е в filter_queryset ако удовлетворява нуждите)
    -   if getattr(instance, '_prefetched_objects_cache', None):
            instance._prefetched_objects_cache = {}
        За това ще ми разкажеш в понеделник какво го е наложило.


Освен тези прочети малко за celery библиотеката, която предоставя изпълнение на асинхронни таскове, и помисли дали няма някой юзкейс който да ги ползва в твоята таск мениджмънт система, че те се използват често. (django-celery-email например ако решиш, че може да са изпращане на emails към project owner или към assignee & assigner)

Имам още за гледане, не съм стигнал до html/css/js 